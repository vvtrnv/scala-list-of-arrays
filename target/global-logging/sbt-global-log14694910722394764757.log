[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\swati\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\swati\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.1)
[debug]       Load.loadUnit: plugins took 79.3858ms
[debug]       Load.loadUnit: defsScala took 0.1823ms
[debug] [Loading] Scanning directory C:\Users\swati\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\swati\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.9631 ms
[debug]           Load.resolveProject(global-plugins) took 34.0088ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\swati\.sbt\1.0\plugins, plugins: List(<none>))) took 70.675ms
[debug] [Loading] Done in C:\Users\swati\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 92.2228ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1914ms
[debug]     Load.loadUnit(file:/C:/Users/swati/.sbt/1.0/plugins/, ...) took 180.3924ms
[debug]   Load.apply: load took 373.3802ms
[debug]   Load.apply: resolveProjects took 3.7674ms
[debug]   Load.apply: finalTransforms took 55.5306ms
[debug]   Load.apply: config.delegates took 6.0762ms
[debug]   Load.apply: Def.make(settings)... took 321.9476ms
[debug]   Load.apply: structureIndex took 80.7878ms
[debug]   Load.apply: mkStreams took 1.1621ms
[info] loading global plugins from C:\Users\swati\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3578.4755ms
[debug]           Load.loadUnit: plugins took 17.2276ms
[debug]           Load.loadUnit: defsScala took 0.0018ms
[debug] [Loading] Scanning directory C:\projects\java\scala-list-arrays\project
[debug]             Load.loadUnit: mkEval took 4.3637ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\projects\java\scala-list-arrays\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.383 ms
[info] loading settings for project scala-list-arrays-build from idea.sbt ...
[debug]               Load.resolveProject(scala-list-arrays-build) took 6.5835ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-list-arrays-build, base: C:\projects\java\scala-list-arrays\project, plugins: List(<none>))) took 8.5354ms
[debug] [Loading] Done in C:\projects\java\scala-list-arrays\project, returning: (scala-list-arrays-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1966.6768ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5499ms
[debug]         Load.loadUnit(file:/C:/projects/java/scala-list-arrays/project/, ...) took 1989.2046ms
[debug]       Load.apply: load took 1990.4356ms
[debug]       Load.apply: resolveProjects took 0.1839ms
[debug]       Load.apply: finalTransforms took 9.8549ms
[debug]       Load.apply: config.delegates took 0.272ms
[debug]       Load.apply: Def.make(settings)... took 60.5202ms
[debug]       Load.apply: structureIndex took 23.0738ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\projects\java\scala-list-arrays\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3721.8128ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\projects\java\scala-list-arrays
[debug]       Load.loadUnit: mkEval took 0.3079ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5295 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 25.8289ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\projects\java\scala-list-arrays, plugins: List(<none>))) took 29.0257ms
[debug] [Loading] Done in C:\projects\java\scala-list-arrays, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1662.7369ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.0514ms
[debug]   Load.loadUnit(file:/C:/projects/java/scala-list-arrays/, ...) took 5402.3765ms
[debug] Load.apply: load took 5404.5367ms
[debug] Load.apply: resolveProjects took 0.2203ms
[debug] Load.apply: finalTransforms took 23.8137ms
[debug] Load.apply: config.delegates took 0.3455ms
[debug] Load.apply: Def.make(settings)... took 63.011ms
[debug] Load.apply: structureIndex took 24.5173ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to scala-list-arrays (in build file:/C:/projects/java/scala-list-arrays/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61942 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61942, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala-list-arrays (in build file:/C:/projects/java/scala-list-arrays/)
[debug] > Exec(idea-shell, None, None)
